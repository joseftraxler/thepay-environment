name: Build Docker Image
on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: Docker version
        options:
          - php8.2-v1
          - php8.3-v1
  push:
    branches:
      - main
    paths:
      - "*/Dockerfile"
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.versions-as-json.outputs.json }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detecting versions to build
        id: detect-versions
        run: |
          echo "${{ toJSON(github.event.inputs) }}"
          echo 'versions=$(
            if [[ -v github.event.inputs.version ]]; then
              echo "${{ github.event.inputs.version }};
            else
              echo $(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep "^php.*/Dockerfile$" | xargs -r dirname);
            fi
          )' >> $GITHUB_OUTPUT;
      - name: Convert to JSON
        id: versions-as-json
        run: |
          echo "Versions:"
          echo "${{ steps.detect-versions.outputs.versions }}"
          echo $(echo "${{ steps.detect-versions.outputs.versions }}" | jq --raw-input | jq --slurp | xargs echo)
          echo "writing to output..."
          echo 'json=$(echo "${{ steps.detect-versions.outputs.versions }}" | jq --raw-input | jq --slurp | xargs echo)' >> $GITHUB_OUTPUT;

  build:
    name: Build & push docker images
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        version: ${{ fromJson(needs.setup.outputs.versions) }}
    steps:
      - uses: actions/checkout@v4
      - name: Login to docker hub
        id: docker-hub
        env:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
        run: |
          echo "$password" | docker login --username $username --password-stdin
      - name: Build the docker image
        id: build-docker-image
        run: echo steps.detected-versions.outputs.versions | xargs -I {} docker build . -f ${{ matrix.version }}/Dockerfile -t ${{secrets.DOCKERHUB_USERNAME}}/thepay-environment:${{ matrix.version }}
      - name: Push the docker image
        id: push-docker-image
        run: docker push ${{secrets.DOCKERHUB_USERNAME}}/thepay-environment:${{ matrix.version }}
      - name: Logout from docker hub & clear credentials
        run: |
          docker logout
          rm $HOME/.docker/config.json
